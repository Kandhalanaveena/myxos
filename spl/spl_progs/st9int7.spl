alias physicalSP S0;
physicalSP= ([PTBR +2* (SP/512)] *512) +(SP%512);

alias sysCallNo S1;
sysCallNo=[physicalSP-1];

if(sysCallNo==10) then
   alias pcb S2;
   pcb=0;
   while(pcb<32 && [READY_LIST+pcb*32+1]!=1) do
      pcb=pcb+1;
   endwhile;
   if(pcb>=32) then
      halt;
   else
      alias pid S3;
      pid=(PTBR-1024)/8;
      pcb=(READY_LIST+pid*32);
      alias ppoft S4;
      ppoft=pcb+15;
      alias count S5;
      alias temp S6;
      count=0;
      temp=ppoft;
      while(count<16) do
        ppoft=temp+count;
        if([ppoft]!=-1) then
           alias swoftind S6;
           swoftind=[ppoft];
           alias swoft S7;
           swoft=FILE_TABLE +(swoftind*2);
           [swoft+1]=[swoft+1]-1;
           if([swoft+1]==0) then
              [swoft]=-1;
           endif;
           [ppoft]=-1;
           [ppoft+1]=-1;
        endif;
        count=count+2;
      endwhile;
      [pcb+1]=0;
      count=0;
      alias mempg S7;
      while(count<8) do
        mempg=PTBR+count;
        if([mempg]!=-1) then
           [MEM_LIST+[mempg]]=0;
           [mempg]=-1;
           [mempg+1]="00";
        endif;
        count=count+2;
      endwhile;
      
      alias newPCB S8;
        newPCB=pcb+32;
       if(newPCB==(READY_LIST+32*32)) then
           newPCB=READY_LIST;
       endif;
      while([newPCB+1]!=1) do
           newPCB=newPCB+32;
           if(newPCB==(READY_LIST+32*32)) then
              newPCB=READY_LIST;
           endif;
      endwhile;
      BP=[newPCB+2];
      SP=[newPCB+3];
      
      PTBR=[newPCB+5];
      PTLR=4;
      
      R0=[newPCB+7];
      R1=[newPCB+8];
      R2=[newPCB+9];
      R3=[newPCB+10];
      R4=[newPCB+11];
      R5=[newPCB+12];
      R6=[newPCB+13];
      R7=[newPCB+14];
      
      SP=SP+1;
      alias newphysicalSP S9;
      newphysicalSP=([PTBR +2* (SP/512)] *512) +(SP%512);
      
      [newphysicalSP]=[newPCB+4];
      [newPCB+1]=2;
   endif; 

      
   

endif;  
ireturn;

    

