load(7,1);//exce
load(8,2);
load(9,3);//timer
load(10,4);
load(11,5);//int 1
load(12,6);
load(13,7);//int 2
load(14,8);
load(15,9);//int 3
load(16,10);
load(17,11);//int 4
load(18,12);
load(19,13);//int 5
load(20,14);
load(21,15);//int 6
load(22,16);
load(23,17);//int 7
load(24,18);

load(5,19);
load(6,20);



[READY_LIST+0]=0;
//load(25,21);
//load(26,22);
//load(27,23);

PTBR=1024;
PTLR=4;
// setting the codepages to invalid to check demand paging
[PTBR+0]=21;
[PTBR+1]="00";
[PTBR+2]=22;
[PTBR+3]="00";
[PTBR+4]=23;
[PTBR+5]="00";
[PTBR+6]=28;
[PTBR+7]="01";

[READY_LIST+1]=2;
alias count S0;
count=FILE_TABLE;
while(count<=1471) do
   [count+0]=-1;
   [count+1]=0;
   count=count+2;
endwhile;

count=READY_LIST;
[count+15]=-1;
[count+16]=-1;
[count+17]=-1;
[count+18]=-1;
[count+19]=-1;
[count+20]=-1;
[count+21]=-1;
[count+22]=-1;
[count+23]=-1;
[count+24]=-1;
[count+25]=-1;
[count+26]=-1;
[count+27]=-1;
[count+28]=-1;
[count+29]=-1;
[count+30]=-1;
[count+31]=0;

count=MEM_LIST;
while(count<=(MEM_LIST+24)) do
   [count]=1;
   count=count+1;
endwhile;

[MEM_LIST+25]=0;
[MEM_LIST+26]=0;
[MEM_LIST+27]=0;
[MEM_LIST+28]=1;

count=MEM_LIST+29;
while(count<(MEM_LIST+64)) do
   [count]=0;
   count=count+1;
endwhile;

//keeping state of all pcbs to terminated-0

count=READY_LIST+32;
while(count<(READY_LIST+32*32)) do
    [count+1]=0;
    count=count+32;
endwhile;

//changing swaparea in dfl

count=DISK_LIST+448;
while(count<DISK_LIST+512) do
    [count]=0;
    count=count+1;
endwhile;

store(6,20);

breakpoint;

SP=3*512;
[28*512]=0;

breakpoint;
ireturn;


